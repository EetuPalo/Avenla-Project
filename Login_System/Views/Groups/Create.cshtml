@model Login_System.ViewModels.GroupVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Resources.Groups.Create_Title</h2>
<h4>@Resources.Groups.Create_SubTitle</h4>
<p>
    @Resources.Groups.Create_Desc1<br />
    @Resources.Groups.Create_Desc2 <br />
    @Resources.Groups.Create_Desc3
</p>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="name" class="control-label"></label>
                <input asp-for="name" class="form-control" />
                <span asp-validation-for="name" class="text-danger"></span>
                <label class="control-label"></label>@Resources.Resources.Company
                @if (User.IsInRole("Superadmin"))
                {
                    @Html.DropDownListFor(x => x.CompanyId, new SelectList(Model.CompanyList, "Value", "Text"), Resources.Resources.CompaniesSelectDropdown, new { @class = "form-control col-sm" })
                }
                else
                {
                    <input asp-for="CompanyId" value="@TempData["CompanyID"]" class ="form-control col-sm" readonly/>
                }
                <span asp-validation-for="company" class="text-danger"></span>
            </div>
            <div class="container-fluid p-0">
                <div class="row">
                    <div class="col-sm">
                        <button type="button" class="btn btn-outline-primary" onclick="goBack()"><i class="fas fa-times fa-fw"> </i> Cancel </button>
                        <button type="submit" class="btn btn-primary"><i class="fas fa-plus fa-fw"> </i> @Resources.Groups.Create_BTN_Create</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

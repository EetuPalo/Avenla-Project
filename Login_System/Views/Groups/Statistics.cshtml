@model IEnumerable<Login_System.ViewModels.GroupStatisticsVM>
@{
    ViewData["Title"] = "Statistics";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>@Resources.Resources.Layout_Groups</h1>
<nav class="breadcrumb_nav" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Dashboard" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="Groups" asp-action="Index">@Resources.Resources.Layout_Groups</a></li>
        <li class="breadcrumb-item active" aria-current="page">@ViewBag.GroupName @Resources.Groups.Stats_Title</li>
    </ol>
</nav>
<hr />
    <div class="card-columns" style="column-count: 2;">
        <div class="card">
            <div class="card-header"><h5>@ViewBag.GroupName @Resources.Groups.Stats_Title</h5></div>
            <div class="card-body">
                <div class="container-fluid p-0">
                    <p><span class="font-weight-bold"><i class="fas fa-users fa-fw"> </i> @Resources.Groups.Stats_Members</span> @ViewBag.MemberCount</p>
                    <p><span class="font-weight-bold"><i class="fas fa-trophy fa-fw"> </i> @Resources.Groups.Stats_GoalsUpdated</span> @ViewBag.LatestGoal</p>
                </div>
                <div class="col-sm-10">
                    <table class="table table-hover p-0">
                        <thead>
                            <tr>
                                <th><i class="fas fa-graduation-cap fa-fw"> </i> @Resources.Groups.Stats_Skill</th>
                                <th><i class="fas fa-trophy fa-fw"> </i> @Resources.Groups.Stats_Goal</th>
                                <th class="font-weight-bold">@Resources.Groups.Stats_GroupAvg</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {

                                <tr>
                                    <td>@item.SkillName</td>
                                    @if (item.SkillGoal == -1)
                                    {
                                        <td>@Resources.Groups.Stats_NoData</td>
                                    }
                                    else
                                    {
                                        <td>@item.SkillGoal</td>
                                    }

                                    @if (item.Average != "0")
                                    {
                                        try
                                        {
                                            if (Convert.ToDouble(item.Average) < item.SkillGoal)
                                            {
                                                <td class="text-danger font-weight-bold">@item.Average</td>
                                            }
                                            else if (Convert.ToDouble(item.Average) >= item.SkillGoal)
                                            {
                                                <td class="text-success font-weight-bold">@item.Average</td>
                                            }
                                        }
                                        catch
                                        {
                                            Console.WriteLine("ERROR");
                                        }
                                    }
                                    else
                                    {
                                        <td class="text-info">@Resources.Groups.Stats_NoData</td>
                                    }
                                </tr>

                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header"><h5>@Resources.Resources.Group_options</h5></div>
            <div class="card-body">
                <div class="container-fluid p-0">
                    <div class="row">
                        <div class="">
                            <div class="p-1 mr-2 border border-light rounded">
                                <a class="btn btn-primary" asp-action="Index" asp-controller="GroupMembers" asp-route-id="@TempData["GroupID"]"><i class="fas fa-users fa-fw"> </i> @Resources.Groups.Stats_BTN_Members</a>
                                <a class="btn btn-primary" asp-action="Index" asp-controller="SkillGoals" asp-route-id="@TempData["GroupID"]"><i class="fas fa-trophy fa-fw"> </i> @Resources.Groups.Stats_BTN_Goals</a>
                            </div>
                        </div>
                        <div class="">
                            <div class="p-1 mr-2 border border-light rounded">
                                <a class="btn btn-info" asp-action="Edit" asp-route-id="@TempData["GroupID"]"><i class="fas fa-edit fa-fw"> </i> @Resources.Groups.Stats_BTN_Edit</a>
                                @*<button class="btn btn-danger" onclick="DeletePopUp('@ViewContext.RouteData.Values["Controller"].ToString()', '@TempData["GroupID"]', '@System.Globalization.CultureInfo.CurrentCulture.Name', true)"><i class="fas fa-trash fa-fw"> </i> @Resources.Groups.Stats_BTN_Delete</button>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

@*@section Scripts{ 
<script>
    function DeleteWithRedirect(id) {
        console.log(id);
        var lang = '@System.Globalization.CultureInfo.CurrentCulture.Name';
        var title = "";
        var text = "";
        if (lang.match("en-GB")) {
            title = "Delete";
            text = "Are you sure you want to delete item?"
        }
        else {
            title = "Poistaminen";
            text = "Haluatko varmasti poistaa kohteen?"
        }
        var urlString = "/fi_FI/Groups/Delete/" + id;
        swal({
            title: title,
            text: text,
            icon: "warning",
            buttons: true,
            dangerMode: true
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    type: "DELETE",
                    url: urlString,
                    beforeSend: function (request) {
                        request.setRequestHeader("RequestVerificationToken", $("[name='__RequestVerificationToken']").val());
                    },
                    success: function (data) {
                        if (data.success) {
                            //location.reload();
                            window.location = '/fi_FI/Groups/';
                        }
                        else {
                            swal({
                                title: "Error message",
                                text: "Delete failed",
                                icon: "warning",
                                buttons: true
                            })
                        }
                    }
                });
            }
        });
    }
</script>
}*@

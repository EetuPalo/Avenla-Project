@model Login_System.ViewModels.SkillCategoryVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Resources.SkillCategories.Index_Title @TempData["ActionPhase"]</h2>
<h4>@TempData["ActionResult"]</h4>
<hr />

    <fieldset>
        <form asp-action="Create" asp-controller="SkillCategory" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="container-fluid p-0">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>@Resources.Skills.Index_Skill</label>
                        @Html.DropDownListFor(x => x.Skills, new SelectList(Model.SkillList, "Value", "Text"),  new { @class = "skill-drop-down form-control col-sm", @multiple="multiple" })
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-outline-primary" onclick="goBack()"><i class="fas fa-times fa-fw"> </i> @Resources.SkillCategories.Create_Cancel </button>
                    <button type="submit" class="btn btn-primary"><i class="fas fa-check fa-fw"> </i> @Resources.Skills.Create_Submit</button>
                </div>
            </div>
           
        </form>
    </fieldset>

    <script>
        $(document).ready(function () {
            $('.skill-drop-down').select2({ templateSelection: formatSelection });
        });

        function formatSelection(selection) {
            //console.log($(selection).find('ul'))

            return selection.text;
        }

    </script>
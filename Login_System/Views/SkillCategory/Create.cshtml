@model Login_System.ViewModels.SkillCategoryVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.tiny.cloud/1/4i5x5wj11bwcuimuna5buqs1c5c0i68ltdpfz8enf9e8pggw/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
        selector: '#skillCategoryDesc'
    });
</script>

<h2>@Resources.SkillCategories.Index_Title @TempData["ActionPhase"]</h2>
<h4>@TempData["ActionResult"]</h4>
<hr />

<div class="card">
    <div class="card-header"><h5>@Resources.SkillCategories.Index_Create</h5>
</div>
    <div class="card-body">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group col-md-6">
                            <label asp-for="Name" class="control-label">@Resources.SkillCategories.Name_SkillCategory</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group col-md-6">
                        <label>@Resources.Skills.Index_Skill</label>
                        @Html.DropDownListFor(x => x.Skills, new SelectList(Model.SkillList, "Value", "Text"), new { @class = "skill-drop-down form-control col-sm", @multiple = "multiple" })
                    </div>
                    <div class="form-group col-md-8">
                        <label asp-for="Description" class="control-label">@Resources.SkillCategories.Desc_SkillCategory</label>
                        <textarea asp-for="Description" class="form-control" id="skillCategoryDesc"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-outline-primary" onclick="goBack()"><i class="fas fa-times fa-fw"> </i> @Resources.SkillCategories.Create_Cancel </button>
                        <button type="submit" class="btn btn-primary"><i class="fas fa-check fa-fw"> </i> @Resources.Skills.Create_Submit</button>
                    </div>
                </form>
            
        
    </div>
</div>

@*<fieldset>
        <form asp-action="Create" asp-controller="SkillCategory" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="container-fluid p-0">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>@Resources.Skills.Index_Skill</label>
                        @Html.DropDownListFor(x => x.Skills, new SelectList(Model.SkillList, "Value", "Text"),  new { @class = "skill-drop-down form-control col-sm", @multiple="multiple" })
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-outline-primary" onclick="goBack()"><i class="fas fa-times fa-fw"> </i> @Resources.SkillCategories.Create_Cancel </button>
                    <button type="submit" class="btn btn-primary"><i class="fas fa-check fa-fw"> </i> @Resources.Skills.Create_Submit</button>
                </div>
            </div>

        </form>
    </fieldset>*@

<script>
    $(document).ready(function () {
        $('.skill-drop-down').select2({ templateSelection: formatSelection });
    });

    function formatSelection(selection) {
        //console.log($(selection).find('ul'))

        return selection.text;
    }

</script>

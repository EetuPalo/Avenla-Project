@model Login_System.ViewModels.SkillCategoryVM

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.tiny.cloud/1/4i5x5wj11bwcuimuna5buqs1c5c0i68ltdpfz8enf9e8pggw/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
        selector: '#skillCategoryDesc'
    });
</script>

<h1>@Resources.SkillCategories.Index_Title </h1>
<nav class="breadcrumb_nav" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Dashboard" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="SkillCategory" asp-action="Index">@Resources.Resources.Layout_SkillCategory</a></li>
        <li class="breadcrumb-item"><a asp-controller="SkillCategory" asp-action="Details" asp-route-id=@ViewContext.RouteData.Values["id"].ToString()>Details</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Resources.Resources.Employee_Index_Edit</li>
    </ol>
</nav>
<hr />
@if (User.IsInRole("Superadmin"))
{
    <div class="card">
        <div class="card-header"><h5>@Resources.Resources.Employee_Index_Edit</h5></div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <form asp-action="Edit">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />
                        <div class="form-group">
                            <label asp-for="Name" class="control-label">@Resources.SkillCategories.Name_SkillCategory</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label>@Resources.Skills.Index_Skill</label>
                            @Html.DropDownListFor(x => x.Skills, new SelectList(Model.SkillList, "Value", "Text"), new { @class = "skill-drop-down form-control col-sm", @multiple = "multiple" })
                        </div>
                        <div class="form-group">
                            <label asp-for="Description" class="control-label">@Resources.SkillCategories.Desc_SkillCategory</label>
                            <textarea asp-for="Description" class="form-control" id="skillCategoryDesc"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input type="hidden" value="@Model.Id" />
                            <button type="button" class="btn btn-outline-primary" onclick="goBack()"><i class="fas fa-times fa-fw"> </i> @Resources.SkillCategories.Create_Cancel </button>
                            <button type="submit" class="btn btn-primary"><i class="fas fa-check fa-fw"> </i> @Resources.Skills.Create_Submit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
@*<div class="row">
    <div class="col-md-4">

        <fieldset>
            <form asp-action="Edit" asp-controller="SkillCategory" autocomplete="off">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="container-fluid p-0">
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>@Resources.Skills.Index_Skill</label>
                        @Html.DropDownListFor(x => x.Skills, new SelectList(Model.SkillList, "Value", "Text"), new { @class = "skill-drop-down form-control col-sm", @multiple = "multiple" })
                    </div>
                    <div class="form-group">
                        <input type="hidden" value="@Model.Id" />
                        <button type="button" class="btn btn-outline-primary" onclick="goBack()"><i class="fas fa-times fa-fw"> </i> @Resources.SkillCategories.Create_Cancel </button>
                        <button type="submit" class="btn btn-primary"><i class="fas fa-check fa-fw"> </i> @Resources.Skills.Create_Submit</button>
                    </div>
                </div>

            </form>
        </fieldset>

    </div>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    var options = [];
    $(document).ready(function () {
        $('.skill-drop-down').select2({ templateSelection: formatSelection });
        //selectin options based on what skills are already in the category that is being edited
            @foreach(var item in Model.currentSkills)
            {
                    <text>
                        options.push('@item');
                    </text>
            }
        $('.skill-drop-down').select2().val(options)
        $('.skill-drop-down').trigger('change');
        });


    function formatSelection(selection) {
        //console.log($(selection).find('ul'))

        return selection.text;
    }

</script>
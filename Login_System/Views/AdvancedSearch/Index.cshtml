@model Login_System.ViewModels.AdvancedSearchVM
@{
    ViewData["Title"] = "AdvancedSearch";

}

<h1>AdvancedSearch</h1>
<hr />
<form asp-controller="AdvancedSearch" asp-action="Index">

    <div class="row">
        @if (User.IsInRole("Superadmin"))
        {
            <div class="col-sm">
                <label asp-for="Company">@Resources.Resources.Company</label>
                @Html.DropDownListFor(x => x.Company, new SelectList(Model.CompanyList, "Value", "Text"), Resources.Resources.Company, new { @class = "js-example-basic-multiple form-control col-sm" })
            </div>
        }
        <div class="col-sm">
            <label asp-for="Certificate">@Resources.Resources.UCertificates_Index_Cert</label>
            @Html.DropDownListFor(x => x.Certificate, new SelectList(Model.CertificateList, "Value", "Text"), Resources.Resources.UCertificates_Create_DropDownDefault, new { @class = "form-control col-sm" })
        </div>
        <div class="col-sm">
            <label asp-for="Groups">@Resources.Groups.Index_Group</label>
            @Html.DropDownListFor(x => x.Groups, new SelectList(Model.GroupList, "Value", "Text"), Resources.Resources.Group_Dropdownlist, new { @class = "form-control col-sm" })
        </div>
        <div class="col-sm"><br /><button class="btn btn-info" type="submit"><i class="fas fa-search fa-fw"> </i> Search</button></div>
        <div class="col-sm"></div>
    </div>
    <br />
    <br />
    <div id="skillFilters">
        <div class="row">   
            <div class="col-sm-2" id="skill">

                @Html.DropDownListFor(x => x.Skill, new SelectList(Model.SkillList, "Value", "Text"), Resources.Skills.Index_Skill, new { @class = "form-control col-sm" })

                <br />
            </div>
            <br />
            <div class="col-sm-2">
               <input class="form-control" id="min" type="number" name="Min" placeholder="Min value: " value="@TempData["inValue"]" min="0" max="5">
            </div>
            <div class="col-sm-2">
              <input class="form-control" id="max" type="number" name="Max" placeholder="Max value: " value="@TempData["MaxValue"]" min="0" max="5">
            </div>
            <div class="col-sm"><button type="button" onclick="addSkillFilter()" class="btn btn-info"><i class="fas fa-plus fa-fw"> </i> Add</button></div>

        </div>
    </div>
    <br />


    <!--Results-->
    <table class="table">
        <thead>
            <tr>
                <th>@Resources.Resources.FirstName</th>
                <th>@Resources.Resources.LastName</th>
                <th>@Resources.Resources.Email</th>
                <th>@Resources.Resources.Phone</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Users.Count() != 0)
            {
                @foreach (var user in Model.Users)
                {
                    @if (ViewBag.CurrentCompany == user.Company || User.IsInRole("Superadmin"))
                    {
                        <tr>
                            <td>@user.FirstName</td>
                            <td>@user.LastName</td>
                            <td>@user.Email</td>
                            <td>@user.PhoneNumber</td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>@user.Company</td>
                            <td>@user.Id</td>
                        </tr>

                    }

                }
            }
        </tbody>
    </table>
    <div>

    </div>

</form>
<div class="test">

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript" language="javascript">

    //get the dropdown menu to multiply it in javascript
    var skilldrop = document.getElementById("skill");
    var i = 0;
    function addSkillFilter() {
        //create the div, where elements will be added
        var node = document.createElement("div");
        node.className = "row";
        //node.id = i + 1;
        i++;
        
        //add a copy of the skill dropdownlist
        node.append(skilldrop.cloneNode(true));
        document.getElementById("skillFilters").appendChild(node);

        //create div for min filter
        var textnode = document.createElement("div");
        textnode.className = "col-sm-2"
        node.appendChild(textnode);
        textnode.innerHTML = '<input class="form-control" id="min" type="number" name="Min" placeholder="Min value: " value="@TempData["inValue"]" min="0" max="5">'
        document.getElementById("skillFilters").appendChild(node);

        // create div for max filter
        var textnode = document.createElement("div");
        textnode.className = "col-sm-2"
        node.appendChild(textnode);
        textnode.innerHTML = ' <input class="form-control" id="max" type="number" name="Max" placeholder="Max value: " value="@TempData["MaxValue"]" min="0" max="5">'
        document.getElementById("skillFilters").appendChild(node);
        
        //create div for delete button
        var textnode = document.createElement("div");
        textnode.className = "col-sm";
        textnode.innerHTML = ""
        node.append(textnode)
        var deleteBtn = document.createElement("button");
        deleteBtn.type = "button";
        deleteBtn.className = "btn btn-danger";
        deleteBtn.innerHTML = "Delete";
        deleteBtn.id = node.id;
        deleteBtn.addEventListener('click', function (id) {
            id= deleteBtn.id
            var skillFilterList = document.getElementById("skillFilters")
            skillFilterList.removeChild(document.getElementById(id))

        })
        textnode.appendChild(deleteBtn);
        document.getElementById("skillFilters").appendChild(node)
    }

</script>

}

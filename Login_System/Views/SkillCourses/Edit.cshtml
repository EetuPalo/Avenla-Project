@model Login_System.ViewModels.SkillCoursesVM

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://cdn.tiny.cloud/1/4i5x5wj11bwcuimuna5buqs1c5c0i68ltdpfz8enf9e8pggw/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

<script>
    tinymce.init({
        selector: '#courseDescEdit'

    });
</script>

<h2 style="display:inline">@Resources.Resources.Layout_Courses</h2>
<nav class="breadcrumb_nav" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Dashboard" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="SkillCourses" asp-action="Index">@Resources.Resources.Layout_Courses</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Resources.Courses.Edit_Title</li>
    </ol>
</nav>

@*with breadcrumbs hr-line was not full width*@
<hr style="width:100%" />
<div class="card">
    <div class="card-header">
        <h5>@Resources.Courses.Edit_Title</h5>
    </div>
    <div class="container-fluid p-0">
        <div class="card-body">
            <form asp-action="Edit">
                <div class="row">
                    <div class="col-md-12">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="id" />
                        <div class="form-group">
                            <label asp-for="CourseName" class="control-label"></label>
                            <input asp-for="CourseName" value="@Model.skillCourse.CourseName" class="form-control" />
                            <span asp-validation-for="CourseName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Location" class="control-label"></label>
                            <input asp-for="Location" value="@Model.skillCourse.Location" class="form-control" />
                            <span asp-validation-for="Location" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Length" class="control-label"></label>
                            <input asp-for="Length" value="@Model.skillCourse.Length" class="form-control" />
                            <span asp-validation-for="Length" class="text-danger"></span>
                        </div>
                        <div id="accordion">
                            <div id="headingOne" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne" onclick="changeIcon()">
                                <label>@Resources.Resources.Advanced_Search_Skills</label> &nbsp;<i id="caret" class="fas fa-angle-up"></i>
                            </div>

                            <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                                <div class="card-body">
                                    <button type="button" onclick="addSkillFilter()" class="btn btn-info float-right "><i class="fas fa-plus fa-fw"> </i> @Resources.Resources.Advanced_Search_AddSkill</button>
                                    <div class="row">

                                        <div class="row col-sm-12" id="skillFilters">

                                            <div class="row col-sm-12" id="skillfilter">
                                                <div class="col-sm-3" id="skill">

                                                    @Html.DropDownListFor(x => x.Skill, new SelectList(Model.SkillList, "Value", "Text"), Resources.Skills.Index_Skill, new { @class = "skillName form-control col-sm", @onchange = "modifyHeading()" })
                                                    <br />
                                                </div>
                                                <br />
                                                <div class="col-sm-3">
                                                    <select name="startLevel" class="max form-control" id="startingLevel" onchange="modifyHeading()">
                                                        <option value="">@Resources.Courses.Create_Starting_Level</option>
                                                        <option value="0">0</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                        <option value="3">3</option>
                                                        <option value="4">4</option>
                                                        <option value="5">5</option>
                                                    </select>
                                                </div>
                                                <div class="col-sm-3">
                                                    <select name="goal" class="min form-control" id="goal" onchange="modifyHeading()">
                                                        <option value="">@Resources.Courses.Create_Goal</option>
                                                        <option value="0">0</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                        <option value="3">3</option>
                                                        <option value="4">4</option>
                                                        <option value="5">5</option>
                                                    </select>
                                                </div>

                                                <div class="buttons col-sm-2"><button type="button" onclick="clearSelection()" class="btn btn-danger col-sm-12"> @Resources.Resources.Advanced_Search_Clear</button></div>

                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="CourseContents" class="control-label"></label>
                                <textarea asp-for="CourseContents" class="form-control" id="courseDescEdit"></textarea>
                                <span asp-validation-for="CourseContents" class="text-danger"></span>
                            </div>
                        </div>


                        <div class="container-fluid p-0">
                            <div class="row">
                                <div class="col-sm">
                                    <button type="button" class="btn btn-outline-primary" onclick="goBack()"><i class="fas fa-times fa-fw"> </i> Cancel </button>
                                    <button type="submit" class="btn btn-primary"><i class="fas fa-save fa-fw"> </i> @Resources.Courses.Edit_BTN_Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<div>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
<script type="text/javascript" language="javascript">
    $(document).ready(
        tinyMCE.triggerSave(),
        $("#courseDescEdit").val("@Html.Raw(Model.skillCourse.CourseContents)")

    );

    $(document).ready(function () {

        var skills, goals, startingLevels;
        var index = 0;
        skills = [@foreach (var skill in ViewBag.skillList) { <text>@skill ,</text>}];
        goals = [@foreach (var goal in ViewBag.goalList) { <text>@goal ,</text>}];
        startingLevels =[@foreach (var startingLevel in ViewBag.startList) { <text>@startingLevel ,</text>}];

        skills.forEach(x => {
            addSkillFilter(x, goals[index], startingLevels[index])
            index++;
        })

        skillDropClone.remove();

    }



    );

    //get the dropdown menu to multiply it in javascript
    var skillDropClone = $("#skillfilter").get(0)

    function addSkillFilter(skill, goal, startingLevel) {
        //has the cloned node
        var completenode = skillDropClone.cloneNode(true);
        completenode.hidden = false;
        console.log(completenode)
        completenode.children[0].firstElementChild.value = skill
        completenode.children[3].firstElementChild.value = goal
        completenode.children[2].firstElementChild.value = startingLevel
        //container div of skillfilters
        var container = document.getElementById("skillFilters");
        //div for new set of searchfunctions
        var aContainer = document.createElement('div');
        aContainer.className = "row";

        aContainer.setAttribute('id', $('#skillFilters').children().length);

        //create button for deletion not included in original filter
        var deleteBtn = document.createElement("button");
        deleteBtn.type = "button";
        deleteBtn.className = "btn btn-danger col-sm";
        deleteBtn.innerHTML = "@Resources.Resources.DELETE_Button";
        deleteBtn.id = $('#skillFilters').children().length;
        deleteBtn.addEventListener('click', removeIt);
        deleteBtn.addEventListener('click', modifyHeading);
        var buttoncontainer = completenode.querySelectorAll(".buttons")[0];
        buttoncontainer.innerHTML = "";

       //appending button to cloned div and that div to skillfilters div
        buttoncontainer.appendChild(deleteBtn);
        completenode.appendChild(buttoncontainer)
        container.appendChild(completenode);
    }

    function removeIt() {
        console.log("remove called");
        this.parentNode.parentNode.remove();
    }

    function changeIcon() {
        $('#collapseOne').on('shown.bs.collapse', function () {
            $("#caret").attr('class', 'fas fa-angle-up')
        });

        $('#collapseOne').on('hidden.bs.collapse', function () {
            $("#caret").attr('class', 'fas fa-angle-down')
        });

    }

    function modifyHeading() {
        var array = []
        var amountOfFilters = $("#skillFilters").children().length
        for (var i = 0; i < amountOfFilters; i++) {

            var skillname = $(".skillName")[i].value;
            if (skillname == "") { skillname= "no skill"}
            var skillMin = 0;
            ($(".min")[i].value != "") ? skillMin = $(".min")[i].value : skillMin = 0;
            var skillMax = 5;
            ($(".max")[i].value != "") ? skillMax = $(".max")[i].value : skillMax = 5;

            array.push(skillname + " (" + skillMin.toString() + "-" + skillMax.toString()+")");
        }

        var headerArray = array.join(', ');
        document.getElementById("headingOne").children[0].innerText = headerArray;

        }

        function clearSelection() {
            $(".skillName")[0].value = "";
            $("#skillFilters #skillfilter #min")[0].value = "";
            $("#skillFilters #skillfilter #max")[0].value = "";
            modifyHeading();

        }


</script>


@model Login_System.ViewModels.DashboardVM
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Boolean active = true;
}

<h1>Dashboard</h1>
<div class="card-columns" style="column-count: 2;">

    <!-- COMPANY INFORMATION -->
    @if (User.IsInRole("Admin") || User.IsInRole("Superadmin"))
    {
        <div class="card shadow-sm p-3 mb-5 rounded">
            <div class="card-body">
                @if (ViewBag.CurrentCompany != null)
                {
                    <h5 class="card-title"> @ViewBag.CurrentCompany <button class="float-right" id="dashCompany" onclick="hideShowFunc()"><i onclick="changeIcon(this)" class="fas fa-angle-down"></i></button></h5>
                }

                else
                {
                    <h5 class="card-title">@Html.Raw("not found")</h5>
                }
                <p class="card-text">

                    <div id="hideshowDIV">
                        @foreach (var company in Model.CompanyDesc)
                        {
                            @Html.Raw(company)
                        }
                    </div>
                </p>
                <p> Linkki ei toimi tällä hetkellä.</p>
                <a asp-area="" asp-controller="Companies" asp-action="Details" class="btn btn-primary"><i class="fas fa-building fa-fw"> </i> @Resources.Resources.Company</a>
            </div>
        </div>

    }

    <!-- USER INFORMATION -->
    @if (User.IsInRole("User"))
    {
        <div class="card shadow-sm p-3 mb-5 rounded">
            <div class="card-body">
                <h5 class="card-title" style="text-transform: Capitalize">
                    <b>@ViewBag.CurrentUserFirstName @ViewBag.CurrentUserLastName</b>
                </h5>
                <p class="card-text">
                    <dl class="row">
                        <dt id="cardProfile" class="col-sm-4">
                            @Resources.Resources.Email:
                        </dt>
                        <dd class="col-sm-8">
                            @ViewBag.CurrentUserEmail
                        </dd>
                        <dt id="cardProfile" class="col-sm-4">
                            @Resources.Resources.Phone:
                        </dt>
                        <dd class="col-sm-8">
                            @ViewBag.CurrentUserPhone
                        </dd>
                        @if (ViewBag.CurrentCompany != null)
                        {
                            <dt id="cardProfile" class="col-sm-4">
                                @Resources.Resources.Company:
                            </dt>
                            <dd class="col-sm-8">
                                @ViewBag.CurrentCompany
                            </dd>
                        }
                    </dl>
                </p>
                <a asp-area="" asp-controller="AppUsers" asp-action="Details" class="btn btn-primary"><i class="fas fa-user fa-fw"> </i> @Resources.Resources.Layout_Profile</a>
            </div>
        </div>
    }
    <br />

    <!-- ADMIN QUICK OPTIONS -->
    @if (User.IsInRole("Admin") || User.IsInRole("Superadmin"))
    {
        <div class="card shadow-sm p-3 mb-5 rounded">
            <div class="card-body">
                <h5 class="card-title">@Resources.Resources.Quick_Options</h5>
                <p class="card-text">
                    <a role="button" class="btn btn-primary col-sm-4" asp-area="" asp-controller="Admin" asp-action="ListRoles"><i class="fas fa-user-tag fa-fw"> </i> @Resources.Resources.Layout_Roles</a>
                    <a role="button" class="btn btn-primary col-sm-4" asp-area="" asp-controller="Groups" asp-action="Index"><i class="fas fa-users fa-fw"> </i> @Resources.Resources.Layout_Groups</a>
                    <br />   <br />
                    <a role="button" class="btn btn-primary col-sm-4" asp-area="" asp-controller="Skills" asp-action="Index"><i class="fas fa-book fa-fw"> </i> @Resources.Resources.Layout_Skills</a>
                    <a role="button" class="btn btn-primary col-sm-4" asp-area="" asp-controller="Certificates" asp-action="Index"><i class="fas fa-award fa-fw"> </i> @Resources.Resources.Layout_Certificates</a>
                    <br /> <br />
                    <a role="button" class="btn btn-primary col-sm-8" asp-area="" asp-controller="AdvancedSearch" asp-action="Index"><i class="fab fa-searchengin fa-fw"> </i> @Resources.Resources.Advanced_Search</a>

                </p>
            </div>
        </div>
    }
    <br />

    <!-- CERTIFICATES INFORMATION -->
    @if (User.IsInRole("User"))
    {
        <div class="card shadow-sm p-3 mb-5 rounded">
            <div class="card-body">
                <h5 class="card-title" style="text-decoration:underline;">@Resources.Resources.Layout_Certificates</h5>
                <p class="card-text">
                    @foreach (var item in Model.UserCertificates)
                    {
                    <p>@Html.DisplayFor(modelItem => item.CertificateName)</p>
                }
                    </p>
                </div>
            </div>
        }

    <!-- GROUPS AND SKILLS INFORMATION -->
    <div class="card shadow-sm p-3 mb-5 rounded">
        <div class="card-body">
            @if (Model.GroupsDD.Count() < 1)
            {@Html.Raw("You have no groups.")}
            @if (Model.GroupsDD.Count() >= 1)
            {
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                @if (Model.GroupsDD.Count() <= 3)
                {

                    @foreach (var group in Model.UserGroups)
                    {
                        <li class="nav-item active">
                            <a class="nav-link" data-toggle="tab" href="#tab-@group.GroupID" role="tab"> <h5 class="card-title">@group.GroupName </h5></a>
                        </li>
                    }

                }
                @if (Model.GroupsDD.Count() > 3)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" style="font-size: 1.25rem;">@Resources.Groups.Index_Group</a>
                        <div class="dropdown-menu">
                            @foreach (var group in Model.UserGroups)
                             {
                                <a class="dropdown-item" href="#tab-@group.GroupID" role="tab" data-toggle="tab">@group.GroupName</a>
                             }
                        </div>
                    </li>
                }
            </ul>
                <br />
                <span class="row" style="text-decoration: underline;"> <span class="col-sm-4" style="text-align:center;"> @Resources.Skills.Index_Skill </span> <span class="col-sm-6" style="text-align:center;">@Resources.Resources.Dashboard_progress</span> <span class="col-sm-2">@Resources.SkillGoals.Index_Goal </span></span>
                <div class="tab-content">
                    @foreach (var group in Model.UserGroups)
                    {
                        <div id="tab-@group.GroupID" class="tab-pane fade">
                            @foreach (var item in Model.UserSkills)
                            {
                                @foreach (var goal in Model.UserGoals.Where(x => x.SkillId == item.SkillId && x.GroupId == group.GroupID))
                                {
                                    <div class="col-sm">
                                        <div class="row">
                                            <div class="col-sm-3">@Html.DisplayFor(modelItem => item.SkillName)</div>
                                            <div class="col-sm-1">@item.SkillLevel </div>
                                            <div class="progress w-50" style="margin-top: 5px;">
                                                <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:@(item.SkillLevel * 100 / goal.SkillGoal)%">
                                                </div>
                                            </div>
                                            <div class="col-sm-2" style="text-align:center;">
                                                @Html.DisplayFor(modelItem => goal.SkillGoal)
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
                }
            </div>
    </div>
    <br />

    <!-- COURSE INFORMATION -->
    <div class="card shadow-sm p-3 mb-5 rounded">
        <div class="card-body">
            <h5 class="card-title">@Resources.Resources.CourseMem_Details_Title</h5>
            <p class="card-text">
                <ul class="nav nav-tabs card-header-tabs" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="enrolled-tab" data-toggle="tab" href="#enrolled" role="tab" aria-controls="enrolled" aria-selected="true">Enrolled</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="completed-tab" data-toggle="tab" href="#completed" role="tab" aria-controls="completed" aria-selected="false">Completed</a>
                    </li>
                </ul>
                <br />

                <div class="tab-content">
                    @foreach (var item in Model.UserCourses)
                    {
                        @if (item.Status == "Enrolled" || item.Status == "Enrolled")
                        {
                            <div class="tab-pane active" id="enrolled" role="tabpanel" aria-labelledby="enrolled-tab">
                                <div class="row"><h6 class="col-sm-12" style="text-decoration:underline;">@Resources.Courses.Index_CourseName</h6></div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        @item.CourseName
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="tab-pane" id="completed" role="tabpanel" aria-labelledby="completed-tab">
                                <div class="row">
                                    <h6 class="col-sm-4" style="text-decoration:underline;">@Resources.Courses.Index_CourseName</h6>
                                    <h6 class="col-sm-3" style="text-decoration:underline;">@Resources.Courses.Course_status </h6>
                                    <h6 class="col-sm-2" style="text-decoration:underline;">@Resources.Courses.Completion_gradeDash </h6>
                                    <h6 class="col-sm-3" style="text-decoration:underline;">@Resources.Courses.Completion_date </h6>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        @item.CourseName
                                    </div>
                                    <div class="col-sm-3 text-success">
                                        @item.Status
                                    </div>
                                    <div class="col-sm-2">
                                        @item.CourseGrade
                                    </div>
                                    <div class="col-sm-3">
                                        @item.CompletionDate.ToString("dd.MM.yyyy")
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </p>
            <a asp-area="" asp-controller="SkillCourses" asp-action="Index" class="btn btn-primary"><i class="fas fa-book-open fa-fw"> </i> @Resources.Resources.Layout_Courses</a>
        </div>
    </div>
    <br />

    <!-- SKILLCHART -->
    <div class="card shadow-sm p-3 mb-5 rounded">
        <div class="card-body">
            <h5>@Resources.Resources.UserSkills_ListByDate_GraphTitle</h5>
            <canvas id="myChart" width="500" height="250"></canvas>
        </div>
    </div>
</div>

<!-- LESSON INFORMATION -->
<div class="card shadow-sm p-3 mb-5 rounded">
    <div class="card-body">
        <h5 class="card-title">@Resources.Courses.Index_Lessons</h5>
        <ul class="nav nav-tabs card-header-tabs" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="upcoming-tab" data-toggle="tab" href="#upcoming" role="tab" aria-controls="upcoming" aria-selected="true">@Resources.Resources.Lessons_upcoming @Resources.Courses.Index_Lessons</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="past-tab" data-toggle="tab" href="#past" role="tab" aria-controls="past" aria-selected="false">@Resources.Resources.Lessons_past @Resources.Courses.Index_Lessons</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="upcoming" role="tabpanel" aria-labelledby="upcoming-tab">
                <p class="card-text">
                    <div class="row">
                        <h6 class="col-sm-4" style="text-decoration:underline;">@Resources.Courses.Index_CourseName</h6>
                        <h6 class="col-sm-3" style="text-decoration:underline;">@Resources.Courses.Index_Lesson_Lesson</h6>
                        <h6 class="col-sm-3" style="text-decoration:underline;">@Resources.Courses.Index_Lesson_Location</h6>
                        <h6 class="col-sm-2" style="text-decoration:underline;">@Resources.Courses.Index_Lesson_Date</h6>
                    </div>
                    @foreach (var lesson in Model.Lessons)
                    {
                        <div class="row">
                            <div class="col-sm-4"> @Html.DisplayFor(modelItem => lesson.CourseName) </div>
                            <div class="col-sm-3">
                                @Html.DisplayFor(modelItem => lesson.LessonName)
                            </div>
                            <div class="col-sm-3" style="text-transform: Capitalize">
                                @Html.DisplayFor(modelItem => lesson.Location)
                            </div>
                            <div class="col-sm-2">
                                @lesson.Date.ToString("HH.mm " + " - " + " dd.MM.yyyy")
                            </div>
                        </div>
                    }
            </div>
            </p>
            <p>
                <div class="tab-pane" id="past" role="tabpanel" aria-labelledby="past-tab">
                    <div class="row">
                        <h6 class="col-sm-4" style="text-decoration:underline;">@Resources.Courses.Index_CourseName</h6>
                        <h6 class="col-sm-3" style="text-decoration:underline;">@Resources.Courses.Index_Lesson_Lesson</h6>
                        <h6 class="col-sm-3" style="text-decoration:underline;">@Resources.Courses.Index_Lesson_Location</h6>
                        <h6 class="col-sm-2" style="text-decoration:underline;">@Resources.Courses.Index_Lesson_Date</h6>
                    </div>
                    @foreach (var lesson in Model.PastLessons)
                    {
                        <div class="row">
                            <div class="col-sm-4"> @Html.DisplayFor(modelItem => lesson.CourseName) </div>
                            <div class="col-sm-3">
                                @Html.DisplayFor(modelItem => lesson.LessonName)
                            </div>
                            <div class="col-sm-3" style="text-transform: Capitalize">
                                @Html.DisplayFor(modelItem => lesson.Location)
                            </div>
                            <div class="col-sm-2">
                                @lesson.Date.ToString("HH.mm " + " - " + " dd.MM.yyyy")
                            </div>
                        </div>
                    }
                </div>
        </div>
        </p>
    </div>
</div>
<br />

<!-- JAVASCRIPT FOR THE CHART -->
<script>
    var ctx = document.getElementById('myChart');
                                var myChart = new Chart(ctx, {

                                    type: 'scatter',
        data: {

            datasets: [
              @{int j = 0, i = 0 ;
                                @foreach (var skill in ViewBag.DataPoint)
                                {
                                    @Html.Raw("{");
                                    j   = 0;
                                    var random = new Random();
                                    var color = String.Format("#{0:X6}", random.Next(0x1000000));//generating a random color for the labels

                    <text>

                data: [
                            @foreach (var item in skill)
                            {
                                        string deta = JsonConvert.SerializeObject(item);
                                        deta = deta.Replace("\"x\"", "x");//json serialize method puts quotes around X and Y and ChartJS doesn't recognize them because of that
                                        deta = deta.Replace("\"y\"", "y");
                                        deta = deta.Remove(7, 1);
                                        deta = deta.Insert(7, "moment(\"");
                                        deta = deta.Insert(26, ",'DD.MM.YYYY')");

                                        @Html.Raw(deta +" ");
                                        @if (j < skill.Count - 1)
                                 {
                                            @Html.Raw(", ")
                                    j++;
                                        }
                                    }
                ],
                    </text>
                <text>
                label: @Html.Raw(JsonConvert.SerializeObject(ViewBag.names[i])),//this appears when hovering over a viewpoint,
                backgroundColor: "@color",
                borderColor: "@color",
                borderWidth: 5,//thickness of data points
                tension: 0,//i honestly don't remember what it does
                fill: false
                        @Html.Raw("},")
                    @{i++;
                                    }
                    //showLine: true
                </text>

                }

                }
        ]
    },
    options: {
        tooltips: {
            callbacks: {
                label: function (tooltipItem, data) {
                                    return "Skill: " + data.datasets[tooltipItem.datasetIndex].label + " Date: " + moment(tooltipItem.xLabel).format('DD MMMM , YYYY') + " Grade:  " + Number(tooltipItem.yLabel);
                                }
            }
        },
        responsive: true,
        maintainAspectRatio: true,

        scales: {
            xAxes: [{

                type: 'time',
                time: {
                    parser: 'YYYY-MM-DD',
                    unit: 'day'
                },
                ticks: {
                    source: 'data'
                }
            }],

            yAxes: [{
                beginAtZero: true,
                suggestedMin: 0,
                suggestedMax: 5,
                stepSize: 1
            }]
        }
    }
});
</script>
<script>
    function hideShowFunc() {
        var x = document.getElementById("hideshowDIV");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
    function changeIcon(x) {
        x.classList.toggle("fa-angle-up");
    }
</script>
